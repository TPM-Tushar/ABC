//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ECDataAPI.Entity.KaveriEntities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class KaveriEntities : DbContext
    {
        public KaveriEntities()
            : base("name=KaveriEntities")
        {
            ((IObjectContextAdapter)this).ObjectContext.CommandTimeout = 480; // seconds
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AMS_BankTransactionAmountDetails> AMS_BankTransactionAmountDetails { get; set; }
        public virtual DbSet<AMS_ChallanMatrixDetails> AMS_ChallanMatrixDetails { get; set; }
        public virtual DbSet<AMS_REG_KhajaneExceptionLog> AMS_REG_KhajaneExceptionLog { get; set; }
        public virtual DbSet<AMS_Remittance_Office_Status> AMS_Remittance_Office_Status { get; set; }
        public virtual DbSet<BookTypeMaster> BookTypeMaster { get; set; }
        public virtual DbSet<CDMaster> CDMaster { get; set; }
        public virtual DbSet<FeesRuleMaster> FeesRuleMaster { get; set; }
        public virtual DbSet<LBPASXML> LBPASXML { get; set; }
        public virtual DbSet<MAS_ServicePackChangeType> MAS_ServicePackChangeType { get; set; }
        public virtual DbSet<MojaniXML> MojaniXML { get; set; }
        public virtual DbSet<RDPRXML> RDPRXML { get; set; }
        public virtual DbSet<REG_LogTypes> REG_LogTypes { get; set; }
        public virtual DbSet<RegistrationArticles> RegistrationArticles { get; set; }
        public virtual DbSet<ScannedFileUploadDetails> ScannedFileUploadDetails { get; set; }
        public virtual DbSet<ScriptManager> ScriptManager { get; set; }
        public virtual DbSet<ServicePackChangesDetails> ServicePackChangesDetails { get; set; }
        public virtual DbSet<ServicePackMaster> ServicePackMaster { get; set; }
        public virtual DbSet<SoftwareReleaseType> SoftwareReleaseType { get; set; }
        public virtual DbSet<UPORXML> UPORXML { get; set; }
        public virtual DbSet<CMN_AuditApiLoging> CMN_AuditApiLoging { get; set; }
        public virtual DbSet<CMN_AuditMvcEventLoging> CMN_AuditMvcEventLoging { get; set; }
        public virtual DbSet<CMN_System_User_ActivityLog> CMN_System_User_ActivityLog { get; set; }
        public virtual DbSet<MAS_Countries> MAS_Countries { get; set; }
        public virtual DbSet<MAS_OfficeMaster> MAS_OfficeMaster { get; set; }
        public virtual DbSet<UMG_ControllerActionDetails> UMG_ControllerActionDetails { get; set; }
        public virtual DbSet<UMG_LevelDetails> UMG_LevelDetails { get; set; }
        public virtual DbSet<UMG_MenuActionAuthorizationMapping> UMG_MenuActionAuthorizationMapping { get; set; }
        public virtual DbSet<UMG_MenuActionMapping> UMG_MenuActionMapping { get; set; }
        public virtual DbSet<UMG_MenuDetails> UMG_MenuDetails { get; set; }
        public virtual DbSet<UMG_OTP_VerificationDetails> UMG_OTP_VerificationDetails { get; set; }
        public virtual DbSet<UMG_PasswordHistory> UMG_PasswordHistory { get; set; }
        public virtual DbSet<UMG_RoleActionAuth> UMG_RoleActionAuth { get; set; }
        public virtual DbSet<UMG_RoleDetails> UMG_RoleDetails { get; set; }
        public virtual DbSet<UMG_RoleDetails_Log> UMG_RoleDetails_Log { get; set; }
        public virtual DbSet<UMG_RoleLevelMapping> UMG_RoleLevelMapping { get; set; }
        public virtual DbSet<UMG_RoleMenuMapping> UMG_RoleMenuMapping { get; set; }
        public virtual DbSet<UMG_UserProfile> UMG_UserProfile { get; set; }
        public virtual DbSet<UMG_UserProfile_Log> UMG_UserProfile_Log { get; set; }
        public virtual DbSet<IntegrationDepartment> IntegrationDepartment { get; set; }
        public virtual DbSet<MAS_Districts> MAS_Districts { get; set; }
        public virtual DbSet<MAS_Gender> MAS_Gender { get; set; }
        public virtual DbSet<MAS_IDProofTypes> MAS_IDProofTypes { get; set; }
        public virtual DbSet<MAS_MaritalStatus> MAS_MaritalStatus { get; set; }
        public virtual DbSet<MAS_Nationality> MAS_Nationality { get; set; }
        public virtual DbSet<MAS_OfficeTypes> MAS_OfficeTypes { get; set; }
        public virtual DbSet<MAS_Profession> MAS_Profession { get; set; }
        public virtual DbSet<MAS_RelationTypes> MAS_RelationTypes { get; set; }
        public virtual DbSet<MAS_States> MAS_States { get; set; }
        public virtual DbSet<MAS_Talukas> MAS_Talukas { get; set; }
        public virtual DbSet<MAS_Titles> MAS_Titles { get; set; }
        public virtual DbSet<MAS_Villages> MAS_Villages { get; set; }
        public virtual DbSet<UMG_API_Users> UMG_API_Users { get; set; }
        public virtual DbSet<MAS_ServiceMaster> MAS_ServiceMaster { get; set; }
        public virtual DbSet<UMG_ControllerActionDetails_Log> UMG_ControllerActionDetails_Log { get; set; }
        public virtual DbSet<UMG_RoleActionAuth_Log> UMG_RoleActionAuth_Log { get; set; }
        public virtual DbSet<MAS_ActivityType> MAS_ActivityType { get; set; }
        public virtual DbSet<MAS_Modules> MAS_Modules { get; set; }
        public virtual DbSet<UMG_MenuActionMapping_Log> UMG_MenuActionMapping_Log { get; set; }
        public virtual DbSet<UMG_MenuDetails_Log> UMG_MenuDetails_Log { get; set; }
        public virtual DbSet<UMG_RoleMenuMapping_Log> UMG_RoleMenuMapping_Log { get; set; }
        public virtual DbSet<UMG_UserDetails> UMG_UserDetails { get; set; }
        public virtual DbSet<UMG_UserDetails_Log> UMG_UserDetails_Log { get; set; }
        public virtual DbSet<STORAGE_SERVERMASTER> STORAGE_SERVERMASTER { get; set; }
        public virtual DbSet<AMS_ChallanMatrixTransDetails> AMS_ChallanMatrixTransDetails { get; set; }
        public virtual DbSet<AMS_REG_PaymentDblVerificationLog> AMS_REG_PaymentDblVerificationLog { get; set; }
        public virtual DbSet<AMS_REG_PaymentTransDetails> AMS_REG_PaymentTransDetails { get; set; }
        public virtual DbSet<SAKALA_UploadFileDetails> SAKALA_UploadFileDetails { get; set; }
        public virtual DbSet<ServicePackReleaseDetails> ServicePackReleaseDetails { get; set; }
        public virtual DbSet<STORAGE_SERVERDETAILS> STORAGE_SERVERDETAILS { get; set; }
        public virtual DbSet<AppVersion> AppVersion { get; set; }
        public virtual DbSet<DROScriptManager> DROScriptManager { get; set; }
        public virtual DbSet<DistrictMaster> DistrictMaster { get; set; }
        public virtual DbSet<DB_RES_ACTIVATION_KEY_OTP> DB_RES_ACTIVATION_KEY_OTP { get; set; }
        public virtual DbSet<DB_RES_INITIATE_MASTER> DB_RES_INITIATE_MASTER { get; set; }
        public virtual DbSet<DB_RES_INSERT_SCRIPT_DETAILS> DB_RES_INSERT_SCRIPT_DETAILS { get; set; }
        public virtual DbSet<DB_RES_SERVICE_COMM_DETAILS> DB_RES_SERVICE_COMM_DETAILS { get; set; }
        public virtual DbSet<DB_RES_TABLE_MASTER> DB_RES_TABLE_MASTER { get; set; }
        public virtual DbSet<DB_RES_TABLEWISE_COUNT> DB_RES_TABLEWISE_COUNT { get; set; }
        public virtual DbSet<MarriageRegistration> MarriageRegistration { get; set; }
        public virtual DbSet<NoticeMaster> NoticeMaster { get; set; }
        public virtual DbSet<DocumentMaster> DocumentMaster { get; set; }
        public virtual DbSet<DiagnosticActionMaster> DiagnosticActionMaster { get; set; }
        public virtual DbSet<DiagnosticDetails> DiagnosticDetails { get; set; }
        public virtual DbSet<DiagnosticMaster> DiagnosticMaster { get; set; }
        public virtual DbSet<QueryAnalyserDetails> QueryAnalyserDetails { get; set; }
        public virtual DbSet<DB_RES_ACTIONS> DB_RES_ACTIONS { get; set; }
        public virtual DbSet<DB_RES_ACTIONS_MASTER> DB_RES_ACTIONS_MASTER { get; set; }
        public virtual DbSet<ReceiptMaster> ReceiptMaster { get; set; }
        public virtual DbSet<REG_EC_KaveriPortal_UserMapping> REG_EC_KaveriPortal_UserMapping { get; set; }
        public virtual DbSet<REG_Users> REG_Users { get; set; }
        public virtual DbSet<DEC_DROrderMaster> DEC_DROrderMaster { get; set; }
        public virtual DbSet<DEC_DRPNDNote> DEC_DRPNDNote { get; set; }
        public virtual DbSet<PropertyMaster> PropertyMaster { get; set; }
        public virtual DbSet<VillageMaster> VillageMaster { get; set; }
        public virtual DbSet<HobliMaster> HobliMaster { get; set; }
        public virtual DbSet<PartyTypeMaster> PartyTypeMaster { get; set; }
        public virtual DbSet<PropertyNoTypeMaster> PropertyNoTypeMaster { get; set; }
        public virtual DbSet<FRUITS_DATA_RECV_DETAILS> FRUITS_DATA_RECV_DETAILS { get; set; }
        public virtual DbSet<FRUITSXML> FRUITSXML { get; set; }
        public virtual DbSet<ServicePackDetails> ServicePackDetails { get; set; }
        public virtual DbSet<BlockchainReasonDetails> BlockchainReasonDetails { get; set; }
        public virtual DbSet<BlockchainRequestDetails> BlockchainRequestDetails { get; set; }
        public virtual DbSet<ECNameSearchKeyValues> ECNameSearchKeyValues { get; set; }
        public virtual DbSet<ECPropertySearchKeyValues> ECPropertySearchKeyValues { get; set; }
        public virtual DbSet<BhoomiMappingDetails> BhoomiMappingDetails { get; set; }
        public virtual DbSet<SROMaster> SROMaster { get; set; }
        public virtual DbSet<FirmDataCentralizationDetails> FirmDataCentralizationDetails { get; set; }
        public virtual DbSet<FirmMaster> FirmMaster { get; set; }
        public virtual DbSet<SocietyFirmScanmaster> SocietyFirmScanmaster { get; set; }
        public virtual DbSet<ARegisterFileDetails> ARegisterFileDetails { get; set; }
        public virtual DbSet<ARegisterGenerationDetails> ARegisterGenerationDetails { get; set; }
        public virtual DbSet<MAS_EnclosureDownloadReasons> MAS_EnclosureDownloadReasons { get; set; }
        public virtual DbSet<ScannedFileDownloadLog> ScannedFileDownloadLog { get; set; }
        public virtual DbSet<ReferenceMaster> ReferenceMaster { get; set; }
        public virtual DbSet<AMS_RefundChallanUsageDetails> AMS_RefundChallanUsageDetails { get; set; }
        public virtual DbSet<AMS_RefundChallanDetails> AMS_RefundChallanDetails { get; set; }
        public virtual DbSet<PartyInfo> PartyInfo { get; set; }
        public virtual DbSet<PhotoThumbUploadDetails> PhotoThumbUploadDetails { get; set; }
        public virtual DbSet<PhotoThumbUploadStatus> PhotoThumbUploadStatus { get; set; }
        public virtual DbSet<PhotoThumbCD_Failed> PhotoThumbCD_Failed { get; set; }
        public virtual DbSet<PhotoThumbCD_Success> PhotoThumbCD_Success { get; set; }
        public virtual DbSet<PhotoThumbUploadLog> PhotoThumbUploadLog { get; set; }
        public virtual DbSet<DocumentRescanDetails> DocumentRescanDetails { get; set; }
        public virtual DbSet<MarriageRescanDetails> MarriageRescanDetails { get; set; }
        public virtual DbSet<PropertySchedules> PropertySchedules { get; set; }
        public virtual DbSet<RPT_DocReg_NoCLBatchDetails> RPT_DocReg_NoCLBatchDetails { get; set; }
        public virtual DbSet<DocumentScanDocVerifyLog> DocumentScanDocVerifyLog { get; set; }
        public virtual DbSet<MarriageScanDocVerifyLog> MarriageScanDocVerifyLog { get; set; }
        public virtual DbSet<NoticeScanDocVerifyLog> NoticeScanDocVerifyLog { get; set; }
        public virtual DbSet<ScanMaster> ScanMaster { get; set; }
        public virtual DbSet<RPT_DocReg_NoCLDetails> RPT_DocReg_NoCLDetails { get; set; }
        public virtual DbSet<SROBifurcationTriLetterDetails> SROBifurcationTriLetterDetails { get; set; }
        public virtual DbSet<RPT_PropertyAreaDetails> RPT_PropertyAreaDetails { get; set; }
        public virtual DbSet<AMS_BankInstrumentNumberDetails> AMS_BankInstrumentNumberDetails { get; set; }
        public virtual DbSet<ChallanNumberDataEntryCorrection> ChallanNumberDataEntryCorrection { get; set; }
        public virtual DbSet<OnlineReceipts> OnlineReceipts { get; set; }
        public virtual DbSet<ReceiptPaymentDetails> ReceiptPaymentDetails { get; set; }
        public virtual DbSet<StampDetails> StampDetails { get; set; }
        public virtual DbSet<VillageMasterVillagesMergingMapping> VillageMasterVillagesMergingMapping { get; set; }
        public virtual DbSet<SocietyFirmCDMaster> SocietyFirmCDMaster { get; set; }
        public virtual DbSet<RPT_DocReg_DateDetails> RPT_DocReg_DateDetails { get; set; }
        public virtual DbSet<INT_SEVASINDHU_MAR_DATA_RECV_DETAILS> INT_SEVASINDHU_MAR_DATA_RECV_DETAILS { get; set; }
        public virtual DbSet<Kaveri2Pilot> Kaveri2Pilot { get; set; }
        public virtual DbSet<MAS_OfficeMaster_DisableInfo> MAS_OfficeMaster_DisableInfo { get; set; }
    
        public virtual ObjectResult<RPT_DocumentsNotRegisteredNotPendingDetails_Result> RPT_DocumentsNotRegisteredNotPendingDetails(Nullable<int> sROCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_DocumentsNotRegisteredNotPendingDetails_Result>("RPT_DocumentsNotRegisteredNotPendingDetails", sROCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<RPT_PendingDocumentsDetails_Result> RPT_PendingDocumentsDetails(Nullable<int> sROCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_PendingDocumentsDetails_Result>("RPT_PendingDocumentsDetails", sROCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<USP_ECDATA_MODIFICATION_DETAILS_COVER_Result> USP_ECDATA_MODIFICATION_DETAILS_COVER(Nullable<long> logID, Nullable<int> logTypeID, Nullable<int> sROCODE, Nullable<long> iTEMID)
        {
            var logIDParameter = logID.HasValue ?
                new ObjectParameter("LogID", logID) :
                new ObjectParameter("LogID", typeof(long));
    
            var logTypeIDParameter = logTypeID.HasValue ?
                new ObjectParameter("LogTypeID", logTypeID) :
                new ObjectParameter("LogTypeID", typeof(int));
    
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var iTEMIDParameter = iTEMID.HasValue ?
                new ObjectParameter("ITEMID", iTEMID) :
                new ObjectParameter("ITEMID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ECDATA_MODIFICATION_DETAILS_COVER_Result>("USP_ECDATA_MODIFICATION_DETAILS_COVER", logIDParameter, logTypeIDParameter, sROCODEParameter, iTEMIDParameter);
        }
    
        public virtual ObjectResult<USP_ECDATA_MODIFICATION_INFO_Result> USP_ECDATA_MODIFICATION_INFO(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> sroCode, string programsSelected)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var sroCodeParameter = sroCode.HasValue ?
                new ObjectParameter("SroCode", sroCode) :
                new ObjectParameter("SroCode", typeof(int));
    
            var programsSelectedParameter = programsSelected != null ?
                new ObjectParameter("ProgramsSelected", programsSelected) :
                new ObjectParameter("ProgramsSelected", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ECDATA_MODIFICATION_INFO_Result>("USP_ECDATA_MODIFICATION_INFO", fromDateParameter, toDateParameter, sroCodeParameter, programsSelectedParameter);
        }
    
        public virtual ObjectResult<USP_ECDATA_MODIFICATION_PROGRAM_NAMES_Result> USP_ECDATA_MODIFICATION_PROGRAM_NAMES(string programIds)
        {
            var programIdsParameter = programIds != null ?
                new ObjectParameter("ProgramIds", programIds) :
                new ObjectParameter("ProgramIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ECDATA_MODIFICATION_PROGRAM_NAMES_Result>("USP_ECDATA_MODIFICATION_PROGRAM_NAMES", programIdsParameter);
        }
    
        public virtual ObjectResult<USP_RPT_BhoomiFileUploadReport_Result> USP_RPT_BhoomiFileUploadReport(Nullable<int> dISTRICTCODE, Nullable<int> sROCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var dISTRICTCODEParameter = dISTRICTCODE.HasValue ?
                new ObjectParameter("DISTRICTCODE", dISTRICTCODE) :
                new ObjectParameter("DISTRICTCODE", typeof(int));
    
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_BhoomiFileUploadReport_Result>("USP_RPT_BhoomiFileUploadReport", dISTRICTCODEParameter, sROCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<USP_RPT_CDWrittenReport_Result> USP_RPT_CDWrittenReport(Nullable<int> districtCode, Nullable<int> sROCode, string cDNumber)
        {
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            var cDNumberParameter = cDNumber != null ?
                new ObjectParameter("CDNumber", cDNumber) :
                new ObjectParameter("CDNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_CDWrittenReport_Result>("USP_RPT_CDWrittenReport", districtCodeParameter, sROCodeParameter, cDNumberParameter);
        }
    
        public virtual ObjectResult<USP_RPT_JSlipUploadReport_Result> USP_RPT_JSlipUploadReport(Nullable<int> dISTRICTCODE, Nullable<int> sROCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var dISTRICTCODEParameter = dISTRICTCODE.HasValue ?
                new ObjectParameter("DISTRICTCODE", dISTRICTCODE) :
                new ObjectParameter("DISTRICTCODE", typeof(int));
    
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_JSlipUploadReport_Result>("USP_RPT_JSlipUploadReport", dISTRICTCODEParameter, sROCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<USP_RPT_REGISTRATION_STATUS_Result> USP_RPT_REGISTRATION_STATUS(Nullable<int> srocode, Nullable<System.DateTime> date)
        {
            var srocodeParameter = srocode.HasValue ?
                new ObjectParameter("srocode", srocode) :
                new ObjectParameter("srocode", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_REGISTRATION_STATUS_Result>("USP_RPT_REGISTRATION_STATUS", srocodeParameter, dateParameter);
        }
    
        public virtual ObjectResult<GetDocumentRegistrationStatistics_Result> GetDocumentRegistrationStatistics(Nullable<int> districtCode, string fromDate, string toDate)
        {
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("districtCode", districtCode) :
                new ObjectParameter("districtCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDocumentRegistrationStatistics_Result>("GetDocumentRegistrationStatistics", districtCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<GetECUserLog_Result> GetECUserLog(Nullable<int> sroCode, Nullable<byte> logTypeID, string fromDate, string toDate)
        {
            var sroCodeParameter = sroCode.HasValue ?
                new ObjectParameter("sroCode", sroCode) :
                new ObjectParameter("sroCode", typeof(int));
    
            var logTypeIDParameter = logTypeID.HasValue ?
                new ObjectParameter("LogTypeID", logTypeID) :
                new ObjectParameter("LogTypeID", typeof(byte));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetECUserLog_Result>("GetECUserLog", sroCodeParameter, logTypeIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<USP_ECDATA_MODIFICATION_OCCURANCES_Result> USP_ECDATA_MODIFICATION_OCCURANCES(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> sroCode, string programsSelected)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var sroCodeParameter = sroCode.HasValue ?
                new ObjectParameter("SroCode", sroCode) :
                new ObjectParameter("SroCode", typeof(int));
    
            var programsSelectedParameter = programsSelected != null ?
                new ObjectParameter("ProgramsSelected", programsSelected) :
                new ObjectParameter("ProgramsSelected", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ECDATA_MODIFICATION_OCCURANCES_Result>("USP_ECDATA_MODIFICATION_OCCURANCES", fromDateParameter, toDateParameter, sroCodeParameter, programsSelectedParameter);
        }
    
        public virtual ObjectResult<USP_FINANCIAL_YEAR_Result> USP_FINANCIAL_YEAR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FINANCIAL_YEAR_Result>("USP_FINANCIAL_YEAR");
        }
    
        public virtual ObjectResult<USP_RPT_SAKALAUpoadReport_Result> USP_RPT_SAKALAUpoadReport(Nullable<int> dISTRICTCODE, Nullable<int> sROCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var dISTRICTCODEParameter = dISTRICTCODE.HasValue ?
                new ObjectParameter("DISTRICTCODE", dISTRICTCODE) :
                new ObjectParameter("DISTRICTCODE", typeof(int));
    
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_SAKALAUpoadReport_Result>("USP_RPT_SAKALAUpoadReport", dISTRICTCODEParameter, sROCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<USP_RPT_SERVICEPACK_DETAILS_Result> USP_RPT_SERVICEPACK_DETAILS(Nullable<int> srocode, Nullable<int> servicepack, Nullable<int> status)
        {
            var srocodeParameter = srocode.HasValue ?
                new ObjectParameter("srocode", srocode) :
                new ObjectParameter("srocode", typeof(int));
    
            var servicepackParameter = servicepack.HasValue ?
                new ObjectParameter("servicepack", servicepack) :
                new ObjectParameter("servicepack", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_SERVICEPACK_DETAILS_Result>("USP_RPT_SERVICEPACK_DETAILS", srocodeParameter, servicepackParameter, statusParameter);
        }
    
        public virtual ObjectResult<USP_RPT_SRO_CASH_COLLECTION_Result> USP_RPT_SRO_CASH_COLLECTION(Nullable<int> districtCode, Nullable<int> sROCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_SRO_CASH_COLLECTION_Result>("USP_RPT_SRO_CASH_COLLECTION", districtCodeParameter, sROCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int USP_GET_ROWCOUNT_OF_TABLE(string tablename, Nullable<int> sroCode)
        {
            var tablenameParameter = tablename != null ?
                new ObjectParameter("tablename", tablename) :
                new ObjectParameter("tablename", typeof(string));
    
            var sroCodeParameter = sroCode.HasValue ?
                new ObjectParameter("sroCode", sroCode) :
                new ObjectParameter("sroCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GET_ROWCOUNT_OF_TABLE", tablenameParameter, sroCodeParameter);
        }
    
        public virtual ObjectResult<USP_REM_BankTransactionDetailList_SRO_Result> USP_REM_BankTransactionDetailList_SRO(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> sROCode, Nullable<int> status)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_REM_BankTransactionDetailList_SRO_Result>("USP_REM_BankTransactionDetailList_SRO", fromDateParameter, toDateParameter, sROCodeParameter, statusParameter);
        }
    
        public virtual ObjectResult<USP_REM_RemittanceDetailsSROOfficeWiseSummary_Result> USP_REM_RemittanceDetailsSROOfficeWiseSummary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_REM_RemittanceDetailsSROOfficeWiseSummary_Result>("USP_REM_RemittanceDetailsSROOfficeWiseSummary");
        }
    
        public virtual ObjectResult<USP_REM_RemittanceDetialsDROOfficeWiseSummary_Result> USP_REM_RemittanceDetialsDROOfficeWiseSummary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_REM_RemittanceDetialsDROOfficeWiseSummary_Result>("USP_REM_RemittanceDetialsDROOfficeWiseSummary");
        }
    
        public virtual ObjectResult<USP_RPT_DDPO_COLLECTION_Result> USP_RPT_DDPO_COLLECTION(Nullable<int> districtCode, Nullable<int> sROCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_DDPO_COLLECTION_Result>("USP_RPT_DDPO_COLLECTION", districtCodeParameter, sROCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<USP_RPT_DocumentReference_Result> USP_RPT_DocumentReference(Nullable<int> districtCode, Nullable<int> srocode, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("districtCode", districtCode) :
                new ObjectParameter("districtCode", typeof(int));
    
            var srocodeParameter = srocode.HasValue ?
                new ObjectParameter("srocode", srocode) :
                new ObjectParameter("srocode", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_DocumentReference_Result>("USP_RPT_DocumentReference", districtCodeParameter, srocodeParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<USP_RPT_GetSupportEnclosureDetails_Result> USP_RPT_GetSupportEnclosureDetails(Nullable<int> sroCode, Nullable<long> documentNumber, Nullable<int> bookType, string financialYear, Nullable<int> enclosureType)
        {
            var sroCodeParameter = sroCode.HasValue ?
                new ObjectParameter("SroCode", sroCode) :
                new ObjectParameter("SroCode", typeof(int));
    
            var documentNumberParameter = documentNumber.HasValue ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(long));
    
            var bookTypeParameter = bookType.HasValue ?
                new ObjectParameter("BookType", bookType) :
                new ObjectParameter("BookType", typeof(int));
    
            var financialYearParameter = financialYear != null ?
                new ObjectParameter("FinancialYear", financialYear) :
                new ObjectParameter("FinancialYear", typeof(string));
    
            var enclosureTypeParameter = enclosureType.HasValue ?
                new ObjectParameter("EnclosureType", enclosureType) :
                new ObjectParameter("EnclosureType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_GetSupportEnclosureDetails_Result>("USP_RPT_GetSupportEnclosureDetails", sroCodeParameter, documentNumberParameter, bookTypeParameter, financialYearParameter, enclosureTypeParameter);
        }
    
        public virtual ObjectResult<USP_RPT_JURISDICTIONAL_SRO_Result> USP_RPT_JURISDICTIONAL_SRO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_JURISDICTIONAL_SRO_Result>("USP_RPT_JURISDICTIONAL_SRO");
        }
    
        public virtual ObjectResult<USP_RPT_KaveriIntegrationReportDetails_Result> USP_RPT_KaveriIntegrationReportDetails(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> districtID, Nullable<int> sROCode)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var districtIDParameter = districtID.HasValue ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(int));
    
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_KaveriIntegrationReportDetails_Result>("USP_RPT_KaveriIntegrationReportDetails", fromDateParameter, toDateParameter, districtIDParameter, sROCodeParameter);
        }
    
        public virtual ObjectResult<USP_RPT_KI_Bhoomi_Result> USP_RPT_KI_Bhoomi(Nullable<int> sROCODE, Nullable<System.DateTime> frOmdate, Nullable<System.DateTime> todate)
        {
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var frOmdateParameter = frOmdate.HasValue ?
                new ObjectParameter("frOmdate", frOmdate) :
                new ObjectParameter("frOmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_KI_Bhoomi_Result>("USP_RPT_KI_Bhoomi", sROCODEParameter, frOmdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<USP_RPT_KI_ESwathu_Result> USP_RPT_KI_ESwathu(Nullable<int> sROCODE, Nullable<System.DateTime> frOmdate, Nullable<System.DateTime> todate)
        {
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var frOmdateParameter = frOmdate.HasValue ?
                new ObjectParameter("frOmdate", frOmdate) :
                new ObjectParameter("frOmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_KI_ESwathu_Result>("USP_RPT_KI_ESwathu", sROCODEParameter, frOmdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<USP_RPT_KI_Mojani_Result> USP_RPT_KI_Mojani(Nullable<int> sROCODE, Nullable<System.DateTime> frOmdate, Nullable<System.DateTime> todate)
        {
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var frOmdateParameter = frOmdate.HasValue ?
                new ObjectParameter("frOmdate", frOmdate) :
                new ObjectParameter("frOmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_KI_Mojani_Result>("USP_RPT_KI_Mojani", sROCODEParameter, frOmdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<USP_RPT_KI_Total_Properties_Regi_Without_Importing_Result> USP_RPT_KI_Total_Properties_Regi_Without_Importing(Nullable<int> sROCODE, Nullable<System.DateTime> frOmdate, Nullable<System.DateTime> todate)
        {
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var frOmdateParameter = frOmdate.HasValue ?
                new ObjectParameter("frOmdate", frOmdate) :
                new ObjectParameter("frOmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_KI_Total_Properties_Regi_Without_Importing_Result>("USP_RPT_KI_Total_Properties_Regi_Without_Importing", sROCODEParameter, frOmdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<USP_RPT_KI_Total_Properties_Registered_Result> USP_RPT_KI_Total_Properties_Registered(Nullable<int> sROCODE, Nullable<System.DateTime> frOmdate, Nullable<System.DateTime> todate)
        {
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var frOmdateParameter = frOmdate.HasValue ?
                new ObjectParameter("frOmdate", frOmdate) :
                new ObjectParameter("frOmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_KI_Total_Properties_Registered_Result>("USP_RPT_KI_Total_Properties_Registered", sROCODEParameter, frOmdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<USP_RPT_KI_UPOR_Result> USP_RPT_KI_UPOR(Nullable<int> sROCODE, Nullable<System.DateTime> frOmdate, Nullable<System.DateTime> todate)
        {
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var frOmdateParameter = frOmdate.HasValue ?
                new ObjectParameter("frOmdate", frOmdate) :
                new ObjectParameter("frOmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_KI_UPOR_Result>("USP_RPT_KI_UPOR", sROCODEParameter, frOmdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<USP_RPT_Mojini_IMPORT_STATUS_Result> USP_RPT_Mojini_IMPORT_STATUS(Nullable<int> dISTRICTCODE, Nullable<int> sROCODE, Nullable<System.DateTime> fROMDATE, Nullable<System.DateTime> tODATE)
        {
            var dISTRICTCODEParameter = dISTRICTCODE.HasValue ?
                new ObjectParameter("DISTRICTCODE", dISTRICTCODE) :
                new ObjectParameter("DISTRICTCODE", typeof(int));
    
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var fROMDATEParameter = fROMDATE.HasValue ?
                new ObjectParameter("FROMDATE", fROMDATE) :
                new ObjectParameter("FROMDATE", typeof(System.DateTime));
    
            var tODATEParameter = tODATE.HasValue ?
                new ObjectParameter("TODATE", tODATE) :
                new ObjectParameter("TODATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_Mojini_IMPORT_STATUS_Result>("USP_RPT_Mojini_IMPORT_STATUS", dISTRICTCODEParameter, sROCODEParameter, fROMDATEParameter, tODATEParameter);
        }
    
        public virtual ObjectResult<USP_RPT_RescanningDetails_Result> USP_RPT_RescanningDetails(Nullable<int> sroCode, Nullable<int> moduleID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var sroCodeParameter = sroCode.HasValue ?
                new ObjectParameter("SroCode", sroCode) :
                new ObjectParameter("SroCode", typeof(int));
    
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_RescanningDetails_Result>("USP_RPT_RescanningDetails", sroCodeParameter, moduleIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<USP_RPT_SURCHARGE_CESS_DETAILS_Result> USP_RPT_SURCHARGE_CESS_DETAILS(Nullable<int> districtCode, Nullable<int> sROCODE, Nullable<System.DateTime> frOmdate, Nullable<System.DateTime> todate, Nullable<int> regArticleCode)
        {
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var frOmdateParameter = frOmdate.HasValue ?
                new ObjectParameter("frOmdate", frOmdate) :
                new ObjectParameter("frOmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var regArticleCodeParameter = regArticleCode.HasValue ?
                new ObjectParameter("RegArticleCode", regArticleCode) :
                new ObjectParameter("RegArticleCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_SURCHARGE_CESS_DETAILS_Result>("USP_RPT_SURCHARGE_CESS_DETAILS", districtCodeParameter, sROCODEParameter, frOmdateParameter, todateParameter, regArticleCodeParameter);
        }
    
        public virtual ObjectResult<USP_BLOCKING_PROCESSES_Result> USP_BLOCKING_PROCESSES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_BLOCKING_PROCESSES_Result>("USP_BLOCKING_PROCESSES");
        }
    
        public virtual ObjectResult<USP_MENU_TO_HIGHLIGHT_Result> USP_MENU_TO_HIGHLIGHT(string controllerName, string actionName)
        {
            var controllerNameParameter = controllerName != null ?
                new ObjectParameter("ControllerName", controllerName) :
                new ObjectParameter("ControllerName", typeof(string));
    
            var actionNameParameter = actionName != null ?
                new ObjectParameter("ActionName", actionName) :
                new ObjectParameter("ActionName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_MENU_TO_HIGHLIGHT_Result>("USP_MENU_TO_HIGHLIGHT", controllerNameParameter, actionNameParameter);
        }
    
        public virtual int USP_PERFORM_DEFAULT_OPERATIONS_FOR_ROLE(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_PERFORM_DEFAULT_OPERATIONS_FOR_ROLE", roleIdParameter);
        }
    
        public virtual ObjectResult<USP_Populate_RoleDetails_Result> USP_Populate_RoleDetails(Nullable<bool> isMenuIdRequired)
        {
            var isMenuIdRequiredParameter = isMenuIdRequired.HasValue ?
                new ObjectParameter("IsMenuIdRequired", isMenuIdRequired) :
                new ObjectParameter("IsMenuIdRequired", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_Populate_RoleDetails_Result>("USP_Populate_RoleDetails", isMenuIdRequiredParameter);
        }
    
        public virtual ObjectResult<USP_PopulateControllerActionDetails_Result> USP_PopulateControllerActionDetails(Nullable<int> menuId)
        {
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("menuId", menuId) :
                new ObjectParameter("menuId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PopulateControllerActionDetails_Result>("USP_PopulateControllerActionDetails", menuIdParameter);
        }
    
        public virtual ObjectResult<USP_PopulateMenuActionDetails_Result> USP_PopulateMenuActionDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PopulateMenuActionDetails_Result>("USP_PopulateMenuActionDetails");
        }
    
        public virtual ObjectResult<USP_PopulateMenus_Result> USP_PopulateMenus(Nullable<short> roleID)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("roleID", roleID) :
                new ObjectParameter("roleID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PopulateMenus_Result>("USP_PopulateMenus", roleIDParameter);
        }
    
        public virtual ObjectResult<USP_GET_ROWCOUNT_OF_TABLE_WRAPPER_Result> USP_GET_ROWCOUNT_OF_TABLE_WRAPPER(Nullable<int> sroCode)
        {
            var sroCodeParameter = sroCode.HasValue ?
                new ObjectParameter("sroCode", sroCode) :
                new ObjectParameter("sroCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_ROWCOUNT_OF_TABLE_WRAPPER_Result>("USP_GET_ROWCOUNT_OF_TABLE_WRAPPER", sroCodeParameter);
        }
    
        public virtual ObjectResult<USP_RPT_ExemptedDocumentsDetail_Result> USP_RPT_ExemptedDocumentsDetail(Nullable<int> sROCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_ExemptedDocumentsDetail_Result>("USP_RPT_ExemptedDocumentsDetail", sROCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<USP_RPT_IMPORT_STATUS_Result> USP_RPT_IMPORT_STATUS(Nullable<int> dISTRICTCODE, Nullable<int> sROCODE, Nullable<System.DateTime> fROMDATE, Nullable<System.DateTime> tODATE, Nullable<int> iMPORT_TYPE)
        {
            var dISTRICTCODEParameter = dISTRICTCODE.HasValue ?
                new ObjectParameter("DISTRICTCODE", dISTRICTCODE) :
                new ObjectParameter("DISTRICTCODE", typeof(int));
    
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var fROMDATEParameter = fROMDATE.HasValue ?
                new ObjectParameter("FROMDATE", fROMDATE) :
                new ObjectParameter("FROMDATE", typeof(System.DateTime));
    
            var tODATEParameter = tODATE.HasValue ?
                new ObjectParameter("TODATE", tODATE) :
                new ObjectParameter("TODATE", typeof(System.DateTime));
    
            var iMPORT_TYPEParameter = iMPORT_TYPE.HasValue ?
                new ObjectParameter("IMPORT_TYPE", iMPORT_TYPE) :
                new ObjectParameter("IMPORT_TYPE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_IMPORT_STATUS_Result>("USP_RPT_IMPORT_STATUS", dISTRICTCODEParameter, sROCODEParameter, fROMDATEParameter, tODATEParameter, iMPORT_TYPEParameter);
        }
    
        public virtual ObjectResult<USP_RPT_KI_EAsthi_Result> USP_RPT_KI_EAsthi(Nullable<int> sROCODE, Nullable<System.DateTime> frOmdate, Nullable<System.DateTime> todate)
        {
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var frOmdateParameter = frOmdate.HasValue ?
                new ObjectParameter("frOmdate", frOmdate) :
                new ObjectParameter("frOmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_KI_EAsthi_Result>("USP_RPT_KI_EAsthi", sROCODEParameter, frOmdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<USP_RPT_RECEIPT_COLLECTION_SUMMARY_Result> USP_RPT_RECEIPT_COLLECTION_SUMMARY(Nullable<int> dISTRICTCODE, Nullable<int> sROCODE, Nullable<int> yEAR, Nullable<int> rECEIPT_TYPE, Nullable<int> pAYMENT_MODE)
        {
            var dISTRICTCODEParameter = dISTRICTCODE.HasValue ?
                new ObjectParameter("DISTRICTCODE", dISTRICTCODE) :
                new ObjectParameter("DISTRICTCODE", typeof(int));
    
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var rECEIPT_TYPEParameter = rECEIPT_TYPE.HasValue ?
                new ObjectParameter("RECEIPT_TYPE", rECEIPT_TYPE) :
                new ObjectParameter("RECEIPT_TYPE", typeof(int));
    
            var pAYMENT_MODEParameter = pAYMENT_MODE.HasValue ?
                new ObjectParameter("PAYMENT_MODE", pAYMENT_MODE) :
                new ObjectParameter("PAYMENT_MODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_RECEIPT_COLLECTION_SUMMARY_Result>("USP_RPT_RECEIPT_COLLECTION_SUMMARY", dISTRICTCODEParameter, sROCODEParameter, yEARParameter, rECEIPT_TYPEParameter, pAYMENT_MODEParameter);
        }
    
        public virtual ObjectResult<USP_RPT_SURCHARGE_CESS_DETAILS_BIFURCATED_Result> USP_RPT_SURCHARGE_CESS_DETAILS_BIFURCATED(Nullable<int> districtCode, Nullable<int> sROCODE, Nullable<System.DateTime> frOmdate, Nullable<System.DateTime> todate, Nullable<int> regArticleCode)
        {
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var frOmdateParameter = frOmdate.HasValue ?
                new ObjectParameter("frOmdate", frOmdate) :
                new ObjectParameter("frOmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var regArticleCodeParameter = regArticleCode.HasValue ?
                new ObjectParameter("RegArticleCode", regArticleCode) :
                new ObjectParameter("RegArticleCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_SURCHARGE_CESS_DETAILS_BIFURCATED_Result>("USP_RPT_SURCHARGE_CESS_DETAILS_BIFURCATED", districtCodeParameter, sROCODEParameter, frOmdateParameter, todateParameter, regArticleCodeParameter);
        }
    
        public virtual ObjectResult<USP_RPT_TotalPropertiesRegiWithoutImporting_Bypass_RDPR_Result> USP_RPT_TotalPropertiesRegiWithoutImporting_Bypass_RDPR(Nullable<int> sROCODE, Nullable<System.DateTime> frOmdate, Nullable<System.DateTime> todate)
        {
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var frOmdateParameter = frOmdate.HasValue ?
                new ObjectParameter("frOmdate", frOmdate) :
                new ObjectParameter("frOmdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_TotalPropertiesRegiWithoutImporting_Bypass_RDPR_Result>("USP_RPT_TotalPropertiesRegiWithoutImporting_Bypass_RDPR", sROCODEParameter, frOmdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<USP_RPT_UNDERVALUATION_DETAILS_APARTMENT_A_Result> USP_RPT_UNDERVALUATION_DETAILS_APARTMENT_A(Nullable<int> sROCODE, string type, string regArticleCode)
        {
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var regArticleCodeParameter = regArticleCode != null ?
                new ObjectParameter("RegArticleCode", regArticleCode) :
                new ObjectParameter("RegArticleCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_UNDERVALUATION_DETAILS_APARTMENT_A_Result>("USP_RPT_UNDERVALUATION_DETAILS_APARTMENT_A", sROCODEParameter, typeParameter, regArticleCodeParameter);
        }
    
        public virtual ObjectResult<USP_RPT_UNDERVALUATION_SUMMARY_V2_Result> USP_RPT_UNDERVALUATION_SUMMARY_V2(Nullable<int> sROCODE, Nullable<int> propertyType, string regArticleCode, string type)
        {
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var propertyTypeParameter = propertyType.HasValue ?
                new ObjectParameter("PropertyType", propertyType) :
                new ObjectParameter("PropertyType", typeof(int));
    
            var regArticleCodeParameter = regArticleCode != null ?
                new ObjectParameter("RegArticleCode", regArticleCode) :
                new ObjectParameter("RegArticleCode", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_UNDERVALUATION_SUMMARY_V2_Result>("USP_RPT_UNDERVALUATION_SUMMARY_V2", sROCODEParameter, propertyTypeParameter, regArticleCodeParameter, typeParameter);
        }
    
        public virtual ObjectResult<USP_REM_BankTransactionDetailList_DRO_Result> USP_REM_BankTransactionDetailList_DRO(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> dROCode, Nullable<int> status)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var dROCodeParameter = dROCode.HasValue ?
                new ObjectParameter("DROCode", dROCode) :
                new ObjectParameter("DROCode", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_REM_BankTransactionDetailList_DRO_Result>("USP_REM_BankTransactionDetailList_DRO", fromDateParameter, toDateParameter, dROCodeParameter, statusParameter);
        }
    
        public virtual ObjectResult<USP_RPT_UNDERVALUATION_DETAILS_AGRICULTURE_Result> USP_RPT_UNDERVALUATION_DETAILS_AGRICULTURE(Nullable<int> sROCODE, string regArticleCode)
        {
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var regArticleCodeParameter = regArticleCode != null ?
                new ObjectParameter("RegArticleCode", regArticleCode) :
                new ObjectParameter("RegArticleCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_UNDERVALUATION_DETAILS_AGRICULTURE_Result>("USP_RPT_UNDERVALUATION_DETAILS_AGRICULTURE", sROCODEParameter, regArticleCodeParameter);
        }
    
        public virtual ObjectResult<USP_RPT_UNDERVALUATION_DETAILS_OPENBUILTRATE_Result> USP_RPT_UNDERVALUATION_DETAILS_OPENBUILTRATE(Nullable<int> sROCODE, string regArticleCode)
        {
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var regArticleCodeParameter = regArticleCode != null ?
                new ObjectParameter("RegArticleCode", regArticleCode) :
                new ObjectParameter("RegArticleCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_UNDERVALUATION_DETAILS_OPENBUILTRATE_Result>("USP_RPT_UNDERVALUATION_DETAILS_OPENBUILTRATE", sROCODEParameter, regArticleCodeParameter);
        }
    
        public virtual ObjectResult<USP_RPT_DocumentScanAndDelivery_Result> USP_RPT_DocumentScanAndDelivery(Nullable<int> districtCode, Nullable<int> srocode, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string officeType, Nullable<int> docTypeID)
        {
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("districtCode", districtCode) :
                new ObjectParameter("districtCode", typeof(int));
    
            var srocodeParameter = srocode.HasValue ?
                new ObjectParameter("srocode", srocode) :
                new ObjectParameter("srocode", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var officeTypeParameter = officeType != null ?
                new ObjectParameter("officeType", officeType) :
                new ObjectParameter("officeType", typeof(string));
    
            var docTypeIDParameter = docTypeID.HasValue ?
                new ObjectParameter("DocTypeID", docTypeID) :
                new ObjectParameter("DocTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_DocumentScanAndDelivery_Result>("USP_RPT_DocumentScanAndDelivery", districtCodeParameter, srocodeParameter, fromdateParameter, todateParameter, officeTypeParameter, docTypeIDParameter);
        }
    
        public virtual ObjectResult<USP_RPT_ScannedFileUploadStatusReport_Result> USP_RPT_ScannedFileUploadStatusReport(Nullable<int> districtCode, Nullable<int> sROCode, string officeType, Nullable<int> documentTypeID)
        {
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            var officeTypeParameter = officeType != null ?
                new ObjectParameter("OfficeType", officeType) :
                new ObjectParameter("OfficeType", typeof(string));
    
            var documentTypeIDParameter = documentTypeID.HasValue ?
                new ObjectParameter("DocumentTypeID", documentTypeID) :
                new ObjectParameter("DocumentTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_ScannedFileUploadStatusReport_Result>("USP_RPT_ScannedFileUploadStatusReport", districtCodeParameter, sROCodeParameter, officeTypeParameter, documentTypeIDParameter);
        }
    
        public virtual int USP_ApplyAppVersion(string sROCodelist, Nullable<int> appMajor, Nullable<int> appMinor, Nullable<System.DateTime> releaseDate, Nullable<System.DateTime> lastDateForPatchUpdate, string appName)
        {
            var sROCodelistParameter = sROCodelist != null ?
                new ObjectParameter("SROCodelist", sROCodelist) :
                new ObjectParameter("SROCodelist", typeof(string));
    
            var appMajorParameter = appMajor.HasValue ?
                new ObjectParameter("AppMajor", appMajor) :
                new ObjectParameter("AppMajor", typeof(int));
    
            var appMinorParameter = appMinor.HasValue ?
                new ObjectParameter("AppMinor", appMinor) :
                new ObjectParameter("AppMinor", typeof(int));
    
            var releaseDateParameter = releaseDate.HasValue ?
                new ObjectParameter("ReleaseDate", releaseDate) :
                new ObjectParameter("ReleaseDate", typeof(System.DateTime));
    
            var lastDateForPatchUpdateParameter = lastDateForPatchUpdate.HasValue ?
                new ObjectParameter("LastDateForPatchUpdate", lastDateForPatchUpdate) :
                new ObjectParameter("LastDateForPatchUpdate", typeof(System.DateTime));
    
            var appNameParameter = appName != null ?
                new ObjectParameter("AppName", appName) :
                new ObjectParameter("AppName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ApplyAppVersion", sROCodelistParameter, appMajorParameter, appMinorParameter, releaseDateParameter, lastDateForPatchUpdateParameter, appNameParameter);
        }
    
        public virtual int USP_ApplyAppVersionDR(string dROCodelist, Nullable<int> appMajor, Nullable<int> appMinor, Nullable<System.DateTime> releaseDate, Nullable<System.DateTime> lastDateForPatchUpdate, string appName)
        {
            var dROCodelistParameter = dROCodelist != null ?
                new ObjectParameter("DROCodelist", dROCodelist) :
                new ObjectParameter("DROCodelist", typeof(string));
    
            var appMajorParameter = appMajor.HasValue ?
                new ObjectParameter("AppMajor", appMajor) :
                new ObjectParameter("AppMajor", typeof(int));
    
            var appMinorParameter = appMinor.HasValue ?
                new ObjectParameter("AppMinor", appMinor) :
                new ObjectParameter("AppMinor", typeof(int));
    
            var releaseDateParameter = releaseDate.HasValue ?
                new ObjectParameter("ReleaseDate", releaseDate) :
                new ObjectParameter("ReleaseDate", typeof(System.DateTime));
    
            var lastDateForPatchUpdateParameter = lastDateForPatchUpdate.HasValue ?
                new ObjectParameter("LastDateForPatchUpdate", lastDateForPatchUpdate) :
                new ObjectParameter("LastDateForPatchUpdate", typeof(System.DateTime));
    
            var appNameParameter = appName != null ?
                new ObjectParameter("AppName", appName) :
                new ObjectParameter("AppName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ApplyAppVersionDR", dROCodelistParameter, appMajorParameter, appMinorParameter, releaseDateParameter, lastDateForPatchUpdateParameter, appNameParameter);
        }
    
        public virtual ObjectResult<USP_RPT_SERVICEPACK_STATUS_DETAILS_Result> USP_RPT_SERVICEPACK_STATUS_DETAILS(string sRDRFlag, Nullable<int> dISTRICTCODE, Nullable<int> sROCode, Nullable<int> releaseType, Nullable<int> changeType, Nullable<int> releasedStatus)
        {
            var sRDRFlagParameter = sRDRFlag != null ?
                new ObjectParameter("SRDRFlag", sRDRFlag) :
                new ObjectParameter("SRDRFlag", typeof(string));
    
            var dISTRICTCODEParameter = dISTRICTCODE.HasValue ?
                new ObjectParameter("DISTRICTCODE", dISTRICTCODE) :
                new ObjectParameter("DISTRICTCODE", typeof(int));
    
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            var releaseTypeParameter = releaseType.HasValue ?
                new ObjectParameter("ReleaseType", releaseType) :
                new ObjectParameter("ReleaseType", typeof(int));
    
            var changeTypeParameter = changeType.HasValue ?
                new ObjectParameter("ChangeType", changeType) :
                new ObjectParameter("ChangeType", typeof(int));
    
            var releasedStatusParameter = releasedStatus.HasValue ?
                new ObjectParameter("ReleasedStatus", releasedStatus) :
                new ObjectParameter("ReleasedStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_SERVICEPACK_STATUS_DETAILS_Result>("USP_RPT_SERVICEPACK_STATUS_DETAILS", sRDRFlagParameter, dISTRICTCODEParameter, sROCodeParameter, releaseTypeParameter, changeTypeParameter, releasedStatusParameter);
        }
    
        public virtual ObjectResult<USP_DB_RES_INITIATE_MASTER_DETAILS_Result> USP_DB_RES_INITIATE_MASTER_DETAILS(Nullable<int> sROCode)
        {
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DB_RES_INITIATE_MASTER_DETAILS_Result>("USP_DB_RES_INITIATE_MASTER_DETAILS", sROCodeParameter);
        }
    
        public virtual ObjectResult<string> USP_GenerateDignosticData_ECDATA_GivenNO(string mODULE_CODE, string rEGISTRATION_NO)
        {
            var mODULE_CODEParameter = mODULE_CODE != null ?
                new ObjectParameter("MODULE_CODE", mODULE_CODE) :
                new ObjectParameter("MODULE_CODE", typeof(string));
    
            var rEGISTRATION_NOParameter = rEGISTRATION_NO != null ?
                new ObjectParameter("REGISTRATION_NO", rEGISTRATION_NO) :
                new ObjectParameter("REGISTRATION_NO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_GenerateDignosticData_ECDATA_GivenNO", mODULE_CODEParameter, rEGISTRATION_NOParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> USP_GET_SEQID_QueryAnalyserDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("USP_GET_SEQID_QueryAnalyserDetails");
        }
    
        public virtual ObjectResult<RPT_PendingDocumentsSummary_Result> RPT_PendingDocumentsSummary(Nullable<int> dISTRICTCODE, Nullable<int> sROCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var dISTRICTCODEParameter = dISTRICTCODE.HasValue ?
                new ObjectParameter("DISTRICTCODE", dISTRICTCODE) :
                new ObjectParameter("DISTRICTCODE", typeof(int));
    
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_PendingDocumentsSummary_Result>("RPT_PendingDocumentsSummary", dISTRICTCODEParameter, sROCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<RPT_PendingLaterFinalizedDocumentsDetails_Result> RPT_PendingLaterFinalizedDocumentsDetails(Nullable<int> sROCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_PendingLaterFinalizedDocumentsDetails_Result>("RPT_PendingLaterFinalizedDocumentsDetails", sROCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<USP_INDEX2_DETAILS_AUDIT_Result> USP_INDEX2_DETAILS_AUDIT(Nullable<int> sroCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> regArticleCode)
        {
            var sroCodeParameter = sroCode.HasValue ?
                new ObjectParameter("SroCode", sroCode) :
                new ObjectParameter("SroCode", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var regArticleCodeParameter = regArticleCode.HasValue ?
                new ObjectParameter("RegArticleCode", regArticleCode) :
                new ObjectParameter("RegArticleCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_INDEX2_DETAILS_AUDIT_Result>("USP_INDEX2_DETAILS_AUDIT", sroCodeParameter, fromDateParameter, toDateParameter, regArticleCodeParameter);
        }
    
        public virtual ObjectResult<RPT_GetInstrumentDetails_Result> RPT_GetInstrumentDetails(string instrumentNumber, string instrumentDate, Nullable<int> type)
        {
            var instrumentNumberParameter = instrumentNumber != null ?
                new ObjectParameter("InstrumentNumber", instrumentNumber) :
                new ObjectParameter("InstrumentNumber", typeof(string));
    
            var instrumentDateParameter = instrumentDate != null ?
                new ObjectParameter("InstrumentDate", instrumentDate) :
                new ObjectParameter("InstrumentDate", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_GetInstrumentDetails_Result>("RPT_GetInstrumentDetails", instrumentNumberParameter, instrumentDateParameter, typeParameter);
        }
    
        public virtual ObjectResult<USP_RPT_CHALLAN_COLLECTION_Result> USP_RPT_CHALLAN_COLLECTION(Nullable<int> districtCode, Nullable<int> sROCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_CHALLAN_COLLECTION_Result>("USP_RPT_CHALLAN_COLLECTION", districtCodeParameter, sROCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<USP_RPT_ECCCCOUNT_OTH_DETAIL_DAYWISE_Result> USP_RPT_ECCCCOUNT_OTH_DETAIL_DAYWISE(Nullable<int> dISTRICTCODE, Nullable<int> sROCODE, Nullable<int> fYear, Nullable<int> mONTH)
        {
            var dISTRICTCODEParameter = dISTRICTCODE.HasValue ?
                new ObjectParameter("DISTRICTCODE", dISTRICTCODE) :
                new ObjectParameter("DISTRICTCODE", typeof(int));
    
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var fYearParameter = fYear.HasValue ?
                new ObjectParameter("FYear", fYear) :
                new ObjectParameter("FYear", typeof(int));
    
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_ECCCCOUNT_OTH_DETAIL_DAYWISE_Result>("USP_RPT_ECCCCOUNT_OTH_DETAIL_DAYWISE", dISTRICTCODEParameter, sROCODEParameter, fYearParameter, mONTHParameter);
        }
    
        public virtual ObjectResult<USP_RPT_ECCCCOUNT_OTH_DETAIL_MONTHWISE_Result> USP_RPT_ECCCCOUNT_OTH_DETAIL_MONTHWISE(Nullable<int> dISTRICTCODE, Nullable<int> sROCODE, Nullable<int> fYear)
        {
            var dISTRICTCODEParameter = dISTRICTCODE.HasValue ?
                new ObjectParameter("DISTRICTCODE", dISTRICTCODE) :
                new ObjectParameter("DISTRICTCODE", typeof(int));
    
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var fYearParameter = fYear.HasValue ?
                new ObjectParameter("FYear", fYear) :
                new ObjectParameter("FYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_ECCCCOUNT_OTH_DETAIL_MONTHWISE_Result>("USP_RPT_ECCCCOUNT_OTH_DETAIL_MONTHWISE", dISTRICTCODEParameter, sROCODEParameter, fYearParameter);
        }
    
        public virtual ObjectResult<USP_POPULATE_OFC_USER_DETAILS_Result> USP_POPULATE_OFC_USER_DETAILS(Nullable<int> officeID, Nullable<int> level)
        {
            var officeIDParameter = officeID.HasValue ?
                new ObjectParameter("OfficeID", officeID) :
                new ObjectParameter("OfficeID", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_POPULATE_OFC_USER_DETAILS_Result>("USP_POPULATE_OFC_USER_DETAILS", officeIDParameter, levelParameter);
        }
    
        public virtual ObjectResult<string> USP_DEC_Finalize(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_DEC_Finalize", orderIDParameter);
        }
    
        public virtual ObjectResult<USP_DEC_GET_NameSearchKeyValues_Result> USP_DEC_GET_NameSearchKeyValues(Nullable<int> sROCODE, Nullable<long> dOCUMENTID)
        {
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var dOCUMENTIDParameter = dOCUMENTID.HasValue ?
                new ObjectParameter("DOCUMENTID", dOCUMENTID) :
                new ObjectParameter("DOCUMENTID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DEC_GET_NameSearchKeyValues_Result>("USP_DEC_GET_NameSearchKeyValues", sROCODEParameter, dOCUMENTIDParameter);
        }
    
        public virtual ObjectResult<USP_DEC_GET_PROPERTYSearchKeyValues_Result> USP_DEC_GET_PROPERTYSearchKeyValues(Nullable<int> sROCODE, Nullable<long> dOCUMENTID, Nullable<long> pROPERTYID)
        {
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var dOCUMENTIDParameter = dOCUMENTID.HasValue ?
                new ObjectParameter("DOCUMENTID", dOCUMENTID) :
                new ObjectParameter("DOCUMENTID", typeof(long));
    
            var pROPERTYIDParameter = pROPERTYID.HasValue ?
                new ObjectParameter("PROPERTYID", pROPERTYID) :
                new ObjectParameter("PROPERTYID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DEC_GET_PROPERTYSearchKeyValues_Result>("USP_DEC_GET_PROPERTYSearchKeyValues", sROCODEParameter, dOCUMENTIDParameter, pROPERTYIDParameter);
        }
    
        public virtual ObjectResult<USP_DEC_GetDOCParameters_Result> USP_DEC_GetDOCParameters(Nullable<int> oRDERID)
        {
            var oRDERIDParameter = oRDERID.HasValue ?
                new ObjectParameter("ORDERID", oRDERID) :
                new ObjectParameter("ORDERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DEC_GetDOCParameters_Result>("USP_DEC_GetDOCParameters", oRDERIDParameter);
        }
    
        public virtual ObjectResult<USP_DEC_GETECREPORT_Result> USP_DEC_GETECREPORT(Nullable<int> sroCode, Nullable<int> bookID, string docNo, Nullable<int> fyear, Nullable<int> orderID)
        {
            var sroCodeParameter = sroCode.HasValue ?
                new ObjectParameter("SroCode", sroCode) :
                new ObjectParameter("SroCode", typeof(int));
    
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(int));
    
            var docNoParameter = docNo != null ?
                new ObjectParameter("DocNo", docNo) :
                new ObjectParameter("DocNo", typeof(string));
    
            var fyearParameter = fyear.HasValue ?
                new ObjectParameter("Fyear", fyear) :
                new ObjectParameter("Fyear", typeof(int));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("orderID", orderID) :
                new ObjectParameter("orderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DEC_GETECREPORT_Result>("USP_DEC_GETECREPORT", sroCodeParameter, bookIDParameter, docNoParameter, fyearParameter, orderIDParameter);
        }
    
        public virtual ObjectResult<USP_DEC_GETNote_Result> USP_DEC_GETNote(Nullable<int> sROCODE, Nullable<int> dOCUMENTID, Nullable<long> pROPERTYID)
        {
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var dOCUMENTIDParameter = dOCUMENTID.HasValue ?
                new ObjectParameter("DOCUMENTID", dOCUMENTID) :
                new ObjectParameter("DOCUMENTID", typeof(int));
    
            var pROPERTYIDParameter = pROPERTYID.HasValue ?
                new ObjectParameter("PROPERTYID", pROPERTYID) :
                new ObjectParameter("PROPERTYID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DEC_GETNote_Result>("USP_DEC_GETNote", sROCODEParameter, dOCUMENTIDParameter, pROPERTYIDParameter);
        }
    
        public virtual ObjectResult<USP_DEC_INDEX2_DETAILS_Result> USP_DEC_INDEX2_DETAILS(Nullable<int> sroCode, Nullable<int> bookID, string docNo, Nullable<int> fyear)
        {
            var sroCodeParameter = sroCode.HasValue ?
                new ObjectParameter("SroCode", sroCode) :
                new ObjectParameter("SroCode", typeof(int));
    
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(int));
    
            var docNoParameter = docNo != null ?
                new ObjectParameter("DocNo", docNo) :
                new ObjectParameter("DocNo", typeof(string));
    
            var fyearParameter = fyear.HasValue ?
                new ObjectParameter("Fyear", fyear) :
                new ObjectParameter("Fyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DEC_INDEX2_DETAILS_Result>("USP_DEC_INDEX2_DETAILS", sroCodeParameter, bookIDParameter, docNoParameter, fyearParameter);
        }
    
        public virtual ObjectResult<USP_DEC_ORDER_LIST_GIVENProperty_Result> USP_DEC_ORDER_LIST_GIVENProperty(Nullable<int> sROCode, Nullable<long> documentID, Nullable<long> propertyID)
        {
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            var documentIDParameter = documentID.HasValue ?
                new ObjectParameter("documentID", documentID) :
                new ObjectParameter("documentID", typeof(long));
    
            var propertyIDParameter = propertyID.HasValue ?
                new ObjectParameter("PropertyID", propertyID) :
                new ObjectParameter("PropertyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DEC_ORDER_LIST_GIVENProperty_Result>("USP_DEC_ORDER_LIST_GIVENProperty", sROCodeParameter, documentIDParameter, propertyIDParameter);
        }
    
        public virtual int USP_DEC_PopulateSearchKeyTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_DEC_PopulateSearchKeyTables");
        }
    
        public virtual int USP_DEC_PopulateSearchKeyTables_SROWise(Nullable<int> districtCode, Nullable<int> srocode)
        {
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var srocodeParameter = srocode.HasValue ?
                new ObjectParameter("srocode", srocode) :
                new ObjectParameter("srocode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_DEC_PopulateSearchKeyTables_SROWise", districtCodeParameter, srocodeParameter);
        }
    
        public virtual ObjectResult<USP_DEC_GETECREPORT_Finalized_Result> USP_DEC_GETECREPORT_Finalized(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("orderID", orderID) :
                new ObjectParameter("orderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DEC_GETECREPORT_Finalized_Result>("USP_DEC_GETECREPORT_Finalized", orderIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> USP_DEC_GetSequenceID_145(Nullable<int> tableID)
        {
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("USP_DEC_GetSequenceID_145", tableIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_DEC_GetSequenceID_23(Nullable<int> tableID)
        {
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_DEC_GetSequenceID_23", tableIDParameter);
        }
    
        public virtual ObjectResult<Nullable<short>> USP_DEC_GET_ENABLED_DR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<short>>("USP_DEC_GET_ENABLED_DR");
        }
    
        public virtual ObjectResult<USP_INDEX2_DETAILS_Result> USP_INDEX2_DETAILS(Nullable<int> sroCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> regArticleCode, Nullable<long> amount)
        {
            var sroCodeParameter = sroCode.HasValue ?
                new ObjectParameter("SroCode", sroCode) :
                new ObjectParameter("SroCode", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var regArticleCodeParameter = regArticleCode.HasValue ?
                new ObjectParameter("RegArticleCode", regArticleCode) :
                new ObjectParameter("RegArticleCode", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_INDEX2_DETAILS_Result>("USP_INDEX2_DETAILS", sroCodeParameter, fromDateParameter, toDateParameter, regArticleCodeParameter, amountParameter);
        }
    
        public virtual ObjectResult<USP_GET_VILLAGE_FROM_DOCUMENTID_FRUITS_Result> USP_GET_VILLAGE_FROM_DOCUMENTID_FRUITS(Nullable<long> documentID, Nullable<int> sROCODE, Nullable<long> landCode)
        {
            var documentIDParameter = documentID.HasValue ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(long));
    
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var landCodeParameter = landCode.HasValue ?
                new ObjectParameter("LandCode", landCode) :
                new ObjectParameter("LandCode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GET_VILLAGE_FROM_DOCUMENTID_FRUITS_Result>("USP_GET_VILLAGE_FROM_DOCUMENTID_FRUITS", documentIDParameter, sROCODEParameter, landCodeParameter);
        }
    
        public virtual ObjectResult<USP_DEC_DeleteNoteFromSRO_Result> USP_DEC_DeleteNoteFromSRO(Nullable<int> oRDERID)
        {
            var oRDERIDParameter = oRDERID.HasValue ?
                new ObjectParameter("ORDERID", oRDERID) :
                new ObjectParameter("ORDERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DEC_DeleteNoteFromSRO_Result>("USP_DEC_DeleteNoteFromSRO", oRDERIDParameter);
        }
    
        public virtual ObjectResult<USP_DEC_ORDER_LIST_Result> USP_DEC_ORDER_LIST(Nullable<int> districtCode, Nullable<int> sROCode)
        {
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DEC_ORDER_LIST_Result>("USP_DEC_ORDER_LIST", districtCodeParameter, sROCodeParameter);
        }
    
        public virtual ObjectResult<USP_RPT_FRUITS_IMPORT_STATUS_Result> USP_RPT_FRUITS_IMPORT_STATUS(Nullable<int> dISTRICTCODE, Nullable<int> sROCODE, Nullable<System.DateTime> fROMDATE, Nullable<System.DateTime> tODATE)
        {
            var dISTRICTCODEParameter = dISTRICTCODE.HasValue ?
                new ObjectParameter("DISTRICTCODE", dISTRICTCODE) :
                new ObjectParameter("DISTRICTCODE", typeof(int));
    
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var fROMDATEParameter = fROMDATE.HasValue ?
                new ObjectParameter("FROMDATE", fROMDATE) :
                new ObjectParameter("FROMDATE", typeof(System.DateTime));
    
            var tODATEParameter = tODATE.HasValue ?
                new ObjectParameter("TODATE", tODATE) :
                new ObjectParameter("TODATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_FRUITS_IMPORT_STATUS_Result>("USP_RPT_FRUITS_IMPORT_STATUS", dISTRICTCODEParameter, sROCODEParameter, fROMDATEParameter, tODATEParameter);
        }
    
        public virtual ObjectResult<string> USP_GET_FRUITS_PROCESSED_DOCUMENT(Nullable<int> dISTRICTCODE, Nullable<int> sROCODE, Nullable<int> year, Nullable<int> month)
        {
            var dISTRICTCODEParameter = dISTRICTCODE.HasValue ?
                new ObjectParameter("DISTRICTCODE", dISTRICTCODE) :
                new ObjectParameter("DISTRICTCODE", typeof(int));
    
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_GET_FRUITS_PROCESSED_DOCUMENT", dISTRICTCODEParameter, sROCODEParameter, yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> USP_RPT_AREGISTER_GetReceiptMaxDate(Nullable<System.DateTime> fROMDATE, Nullable<System.DateTime> tODATE, Nullable<int> sROCode)
        {
            var fROMDATEParameter = fROMDATE.HasValue ?
                new ObjectParameter("FROMDATE", fROMDATE) :
                new ObjectParameter("FROMDATE", typeof(System.DateTime));
    
            var tODATEParameter = tODATE.HasValue ?
                new ObjectParameter("TODATE", tODATE) :
                new ObjectParameter("TODATE", typeof(System.DateTime));
    
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("USP_RPT_AREGISTER_GetReceiptMaxDate", fROMDATEParameter, tODATEParameter, sROCodeParameter);
        }
    
        public virtual ObjectResult<USP_RPT_ECCCCOUNT_OTH_DETAIL_OFFICEWISE_Result> USP_RPT_ECCCCOUNT_OTH_DETAIL_OFFICEWISE(Nullable<int> dISTRICTCODE, Nullable<int> sROCODE, Nullable<int> fYear, Nullable<int> mONTH)
        {
            var dISTRICTCODEParameter = dISTRICTCODE.HasValue ?
                new ObjectParameter("DISTRICTCODE", dISTRICTCODE) :
                new ObjectParameter("DISTRICTCODE", typeof(int));
    
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var fYearParameter = fYear.HasValue ?
                new ObjectParameter("FYear", fYear) :
                new ObjectParameter("FYear", typeof(int));
    
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_ECCCCOUNT_OTH_DETAIL_OFFICEWISE_Result>("USP_RPT_ECCCCOUNT_OTH_DETAIL_OFFICEWISE", dISTRICTCODEParameter, sROCODEParameter, fYearParameter, mONTHParameter);
        }
    
        public virtual ObjectResult<USP_FINANCIAL_YEAR_FROM_GIVEN_YEAR_Result> USP_FINANCIAL_YEAR_FROM_GIVEN_YEAR(Nullable<int> fROMYEAR)
        {
            var fROMYEARParameter = fROMYEAR.HasValue ?
                new ObjectParameter("FROMYEAR", fROMYEAR) :
                new ObjectParameter("FROMYEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FINANCIAL_YEAR_FROM_GIVEN_YEAR_Result>("USP_FINANCIAL_YEAR_FROM_GIVEN_YEAR", fROMYEARParameter);
        }
    
        public virtual ObjectResult<USP_RPT_INCOMETAX_REPORT_Result> USP_RPT_INCOMETAX_REPORT(Nullable<int> dISTRICTCODE, Nullable<int> sROCODE, Nullable<int> fYEAR)
        {
            var dISTRICTCODEParameter = dISTRICTCODE.HasValue ?
                new ObjectParameter("DISTRICTCODE", dISTRICTCODE) :
                new ObjectParameter("DISTRICTCODE", typeof(int));
    
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var fYEARParameter = fYEAR.HasValue ?
                new ObjectParameter("FYEAR", fYEAR) :
                new ObjectParameter("FYEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_INCOMETAX_REPORT_Result>("USP_RPT_INCOMETAX_REPORT", dISTRICTCODEParameter, sROCODEParameter, fYEARParameter);
        }
    
        public virtual ObjectResult<USP_AMS_CHECK_InstrumentDetails_Exists_Refund_Result> USP_AMS_CHECK_InstrumentDetails_Exists_Refund(string instrumentNumber, Nullable<bool> checkStatus)
        {
            var instrumentNumberParameter = instrumentNumber != null ?
                new ObjectParameter("InstrumentNumber", instrumentNumber) :
                new ObjectParameter("InstrumentNumber", typeof(string));
    
            var checkStatusParameter = checkStatus.HasValue ?
                new ObjectParameter("CheckStatus", checkStatus) :
                new ObjectParameter("CheckStatus", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_AMS_CHECK_InstrumentDetails_Exists_Refund_Result>("USP_AMS_CHECK_InstrumentDetails_Exists_Refund", instrumentNumberParameter, checkStatusParameter);
        }
    
        public virtual ObjectResult<USP_AMS_RefundChallanDetails_LIST_Result> USP_AMS_RefundChallanDetails_LIST(Nullable<int> districtCode, Nullable<int> sROCode)
        {
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_AMS_RefundChallanDetails_LIST_Result>("USP_AMS_RefundChallanDetails_LIST", districtCodeParameter, sROCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> USP_GET_SEQID_AMS_GetSequenceRefundChallan(Nullable<int> tableID)
        {
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("USP_GET_SEQID_AMS_GetSequenceRefundChallan", tableIDParameter);
        }
    
        public virtual ObjectResult<USP_AREGISTER_ReportGenerationDetails_Result> USP_AREGISTER_ReportGenerationDetails(Nullable<System.DateTime> fROMDATE, Nullable<System.DateTime> tODATE, Nullable<int> sROCODE, Nullable<int> dROCODE, Nullable<bool> isFileGenerated)
        {
            var fROMDATEParameter = fROMDATE.HasValue ?
                new ObjectParameter("FROMDATE", fROMDATE) :
                new ObjectParameter("FROMDATE", typeof(System.DateTime));
    
            var tODATEParameter = tODATE.HasValue ?
                new ObjectParameter("TODATE", tODATE) :
                new ObjectParameter("TODATE", typeof(System.DateTime));
    
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var dROCODEParameter = dROCODE.HasValue ?
                new ObjectParameter("DROCODE", dROCODE) :
                new ObjectParameter("DROCODE", typeof(int));
    
            var isFileGeneratedParameter = isFileGenerated.HasValue ?
                new ObjectParameter("IsFileGenerated", isFileGenerated) :
                new ObjectParameter("IsFileGenerated", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_AREGISTER_ReportGenerationDetails_Result>("USP_AREGISTER_ReportGenerationDetails", fROMDATEParameter, tODATEParameter, sROCODEParameter, dROCODEParameter, isFileGeneratedParameter);
        }
    
        public virtual ObjectResult<USP_ActionWiseDiagnoticsDetails_ByTile_Result> USP_ActionWiseDiagnoticsDetails_ByTile(Nullable<System.DateTime> forDATE, Nullable<int> getDataBy)
        {
            var forDATEParameter = forDATE.HasValue ?
                new ObjectParameter("ForDATE", forDATE) :
                new ObjectParameter("ForDATE", typeof(System.DateTime));
    
            var getDataByParameter = getDataBy.HasValue ?
                new ObjectParameter("GetDataBy", getDataBy) :
                new ObjectParameter("GetDataBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ActionWiseDiagnoticsDetails_ByTile_Result>("USP_ActionWiseDiagnoticsDetails_ByTile", forDATEParameter, getDataByParameter);
        }
    
        public virtual ObjectResult<USP_DiagDetail_Result> USP_DiagDetail(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DiagDetail_Result>("USP_DiagDetail", dateParameter);
        }
    
        public virtual ObjectResult<USP_DiagSummary_Result> USP_DiagSummary(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DiagSummary_Result>("USP_DiagSummary", dateParameter);
        }
    
        public virtual ObjectResult<USP_DEC_RescanApp_OrderList_Result> USP_DEC_RescanApp_OrderList(Nullable<int> districtCode, Nullable<int> sROCode)
        {
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_DEC_RescanApp_OrderList_Result>("USP_DEC_RescanApp_OrderList", districtCodeParameter, sROCodeParameter);
        }
    
        public virtual ObjectResult<GetECDailyReceiptDetails_Result> GetECDailyReceiptDetails(string fromDate, string toDate, Nullable<int> sroCode)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            var sroCodeParameter = sroCode.HasValue ?
                new ObjectParameter("sroCode", sroCode) :
                new ObjectParameter("sroCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetECDailyReceiptDetails_Result>("GetECDailyReceiptDetails", fromDateParameter, toDateParameter, sroCodeParameter);
        }
    
        public virtual ObjectResult<USP_RPT_DailyReceiptDetails_Result> USP_RPT_DailyReceiptDetails(Nullable<int> districtCode, Nullable<int> sroCode, Nullable<int> moduleID, Nullable<int> feeRuleCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var sroCodeParameter = sroCode.HasValue ?
                new ObjectParameter("SroCode", sroCode) :
                new ObjectParameter("SroCode", typeof(int));
    
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            var feeRuleCodeParameter = feeRuleCode.HasValue ?
                new ObjectParameter("FeeRuleCode", feeRuleCode) :
                new ObjectParameter("FeeRuleCode", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_DailyReceiptDetails_Result>("USP_RPT_DailyReceiptDetails", districtCodeParameter, sroCodeParameter, moduleIDParameter, feeRuleCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<RPT_ARegister_Result> RPT_ARegister(string passDailyDate, Nullable<int> passSROCode)
        {
            var passDailyDateParameter = passDailyDate != null ?
                new ObjectParameter("PassDailyDate", passDailyDate) :
                new ObjectParameter("PassDailyDate", typeof(string));
    
            var passSROCodeParameter = passSROCode.HasValue ?
                new ObjectParameter("PassSROCode", passSROCode) :
                new ObjectParameter("PassSROCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_ARegister_Result>("RPT_ARegister", passDailyDateParameter, passSROCodeParameter);
        }
    
        public virtual ObjectResult<RPT_ARegister_AnywhereEC_Result> RPT_ARegister_AnywhereEC(Nullable<System.DateTime> passFromDate, Nullable<System.DateTime> passToDate, Nullable<int> passSROCode)
        {
            var passFromDateParameter = passFromDate.HasValue ?
                new ObjectParameter("PassFromDate", passFromDate) :
                new ObjectParameter("PassFromDate", typeof(System.DateTime));
    
            var passToDateParameter = passToDate.HasValue ?
                new ObjectParameter("PassToDate", passToDate) :
                new ObjectParameter("PassToDate", typeof(System.DateTime));
    
            var passSROCodeParameter = passSROCode.HasValue ?
                new ObjectParameter("PassSROCode", passSROCode) :
                new ObjectParameter("PassSROCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_ARegister_AnywhereEC_Result>("RPT_ARegister_AnywhereEC", passFromDateParameter, passToDateParameter, passSROCodeParameter);
        }
    
        public virtual ObjectResult<ECMIS_ScannedPageCountDetails_Result> ECMIS_ScannedPageCountDetails(string passFromDate, string passToDate, Nullable<int> districtCode, Nullable<int> sROCode)
        {
            var passFromDateParameter = passFromDate != null ?
                new ObjectParameter("PassFromDate", passFromDate) :
                new ObjectParameter("PassFromDate", typeof(string));
    
            var passToDateParameter = passToDate != null ?
                new ObjectParameter("PassToDate", passToDate) :
                new ObjectParameter("PassToDate", typeof(string));
    
            var districtCodeParameter = districtCode.HasValue ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(int));
    
            var sROCodeParameter = sROCode.HasValue ?
                new ObjectParameter("SROCode", sROCode) :
                new ObjectParameter("SROCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ECMIS_ScannedPageCountDetails_Result>("ECMIS_ScannedPageCountDetails", passFromDateParameter, passToDateParameter, districtCodeParameter, sROCodeParameter);
        }
    
        public virtual ObjectResult<RPT_GetInstrumentDetails_For_ChallanNoDataEntryCorrection_Result> RPT_GetInstrumentDetails_For_ChallanNoDataEntryCorrection(string instrumentNumber, string instrumentDate, Nullable<int> type)
        {
            var instrumentNumberParameter = instrumentNumber != null ?
                new ObjectParameter("InstrumentNumber", instrumentNumber) :
                new ObjectParameter("InstrumentNumber", typeof(string));
    
            var instrumentDateParameter = instrumentDate != null ?
                new ObjectParameter("InstrumentDate", instrumentDate) :
                new ObjectParameter("InstrumentDate", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_GetInstrumentDetails_For_ChallanNoDataEntryCorrection_Result>("RPT_GetInstrumentDetails_For_ChallanNoDataEntryCorrection", instrumentNumberParameter, instrumentDateParameter, typeParameter);
        }
    
        public virtual ObjectResult<USP_RPT_SCANNING_CONSOLIDATED_Result> USP_RPT_SCANNING_CONSOLIDATED(Nullable<int> dISTRICTCODE, Nullable<int> sROCODE, Nullable<int> mONTH, Nullable<int> yEAR)
        {
            var dISTRICTCODEParameter = dISTRICTCODE.HasValue ?
                new ObjectParameter("DISTRICTCODE", dISTRICTCODE) :
                new ObjectParameter("DISTRICTCODE", typeof(int));
    
            var sROCODEParameter = sROCODE.HasValue ?
                new ObjectParameter("SROCODE", sROCODE) :
                new ObjectParameter("SROCODE", typeof(int));
    
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_RPT_SCANNING_CONSOLIDATED_Result>("USP_RPT_SCANNING_CONSOLIDATED", dISTRICTCODEParameter, sROCODEParameter, mONTHParameter, yEARParameter);
        }
    }
}
