@model CustomModels.Models.UserManagement.OfficeDetailsModel
@using ECDataUI.Helper;

<style>
    .verticalLine1 {
        border-top: 1px solid white;
        border-bottom: 1px solid white;
        border-radius: 100%;
        /*position: absolute;*/
        left: 0px;
        height: 80%;
        width: 2px;
        opacity: 0.7;
        background-color: #aaa;
        margin: auto;
        margin-top: 10%;
    }

    .verticalLine2 {
        border-top: 1px solid white;
        border-bottom: 1px solid white;
        border-radius: 100%;
        /*position: absolute;*/
        left: 0px;
        height: 88%;
        width: 2px;
        opacity: 0.7;
        background-color: #aaa;
        margin: auto;
        margin-top: 5%;
    }
</style>


<script>
    //Commented by shubham bhagat on 10 - 4 - 2019 requirement change
    @*var talukaListShow = '@Model.displayTalukaListHidden' ? 1 : 0;*@

    var IsUpdate = '@Model.IsForUpdate';
</script>

<script src="~/Areas/UserManagement/Scripts/Office/CreateOffice.js"></script>
@*<script src="~/Areas/UserManagement/Scripts/Office/CreateOffice.min.js"></script>*@

<div class="col-md-offset-0">
    <div class="panel panel-default" id="panelOffice" style="width: 100%; box-shadow: 5px 5px 10px #d0d3d4; background: #FBFCFC; ">
        <div class="panel-body">
            <div class='row well-custom' style="height: 35px; padding-top: 10px; margin-right: 0px; margin-left: 0px;">
                <span id="" style="margin-left: 05px;font-size:120%;padding-left:1%;"></span>
                @if (Model.IsForUpdate)
                {
                    <span class="" id="panelHeadingForForm" style="color: #FFF;font-size:120%;">Update Office Details </span>
                }
                else
                {
                    <span class="" id="panelHeadingForForm" style="color: #FFF;font-size:120%;">New Office</span>
                }
                               
                <span id="closeOfficeForm"><i class="fa fa-times-circle text-danger removeIcon pull-right" style="cursor:pointer;font-size:165%;" title="Close"></i></span>
            </div>
            <form id="OfficeDetailsForm">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                
                <div class="" style="background: #fff; border: 1px solid #ECF0F1; padding-top: 1%; padding-left: 1%;padding-right: 1%;padding-bottom: 1%; overflow-y: auto;">
                    @if (Model.IsAnyFirmRegisteredForCurrentOffice == true)
                    {
                        <div class="row" id="roleDetailsHeadingDIVid">
                            @*<div class="col-md-12">
                                    <h4>
                                        Map/Unmap menu with<b> @Model.RoleName</b> role.
                                    </h4>
                                </div>*@
                            <div class="col-md-12">
                                <div class="alert form-control alert-info" style="padding-bottom:30px;">
                                    <span>
                                        <i class="fa fa-exclamation-circle fa-1x" aria-hidden="true"></i> Note: Office Details Cannot Be Updated because firm is filed against current Office.
                                    </span>
                                </div>
                            </div>
                        </div><br />
                    }

                    <div class="" style="background: #fff;overflow-y: auto; max-height: 600px;">
                        <div class="row">
                            <div class="col-md-12">
                                <fieldset>
                                    <div class="col-md-12" style="border: solid 1px #d1d1d1;border-radius:12px;display: flex;">
                                        <div class="col-md-5">
                                            <br>
                                            @Html.HiddenFor(m => m.EncryptedId)
                                            @Html.HiddenFor(model => model.IsAnyFirmRegisteredForCurrentOffice, new { htmlAttributes = new { @class = "form-control", id = "IsAnyFirmRegisteredForCurrentOffice" } })
                                            <fieldset>
                                                <div class="row">
                                                    <div class="col-md-6 PaddingTop10">
                                                        @Html.LabelFor(model => model.OfficeNameE, new { @class = "control-label " }, Mandatory.Yes)
                                                    </div>
                                                    <div class="col-md-6">
                                                        @Html.EditorFor(model => model.OfficeNameE, new { htmlAttributes = new { @class = "form-control minimal", @id = "OfficeNametxt", tabindex = 1, @maxlength = 150 } })
                                                        @Html.ValidationMessageFor(model => model.OfficeNameE, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br>

                                                <div class="row">
                                                    <div class="col-md-6 PaddingTop10">
                                                        @Html.LabelFor(model => model.OfficeTypeList, new { @class = "control-label " }, Mandatory.Yes)

                                                    </div>
                                                    <div class="col-md-6">
                                                        @Html.DropDownListFor(model => model.OfficeTypeId, Model.OfficeTypeList, new { @class = "form-control minimal", onchange = "OfficeTypeChangeFun()", @id = "drpOfficeTypeList", tabindex = 3 })
                                                        @Html.ValidationMessageFor(model => model.OfficeTypeId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br>

                                                <div class="row">
                                                    <div class="col-md-6 PaddingTop10">
                                                        @Html.LabelFor(model => model.DistrictsList, new { @class = "control-label " }, Mandatory.Yes)
                                                    </div>
                                                    <div class="col-md-6">
                                                        @*Commented by shubham bhagat on 10 - 4 - 2019 requirement change*@
                                                        @*@Html.DropDownListFor(model => model.DistrictId, Model.DistrictsList, new { @class = "form-control minimal", @id = "drpDistrictList", tabindex = 5, onchange = "autoFillTalukaFun()" })*@
                                                        @Html.DropDownListFor(model => model.DistrictId, Model.DistrictsList, new { @class = "form-control minimal", @id = "drpDistrictList", tabindex = 5 })
                                                        @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br>

                                                @*<div class="row">
                                                        <div class="col-md-6 PaddingTop10">
                                                            @Html.LabelFor(model => model.OfficeNameR, new { @class = "control-label " }, Mandatory.Yes)
                                                       </div>
                                                        <div class="col-md-6">
                                                            @Html.EditorFor(model => model.OfficeNameR, new { htmlAttributes = new { @class = "form-control minimal", tabindex = 3 } })
                                                            @Html.ValidationMessageFor(model => model.OfficeNameR, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <br>*@
                                                <div class="row">
                                                    <div class="col-md-6 PaddingTop10">
                                                        @Html.LabelFor(model => model.OfficeAddress, new { @class = "control-label " }, Mandatory.Yes)
                                                    </div>
                                                    <div class="col-md-6">
                                                        @Html.TextAreaFor(model => model.OfficeAddress, new { @class = " form-control multi-line minimal", @id = "OfficeAddressId", tabindex = 7, @maxlength = 500 })
                                                        @Html.ValidationMessageFor(model => model.OfficeAddress, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br>
                                                @*<div class="row">
                                                        <div class="col-md-6 PaddingTop10">
                                                            @Html.LabelFor(model => model.ShortNameR, new { @class = "control-label " }, Mandatory.Yes)
                                                       </div>
                                                        <div class="col-md-6">
                                                            @Html.EditorFor(model => model.ShortNameR, new { htmlAttributes = new { @class = "form-control minimal", tabindex = 7 } })
                                                            @Html.ValidationMessageFor(model => model.ShortNameR, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <br>*@

                                            </fieldset>
                                        </div>

                                        <div class="col-md-2 " style="text-align: center;">
                                            <div class="verticalLine1"></div>
                                        </div>

                                        <div class="col-md-5">
                                            <br>
                                            <fieldset>
                                                <div class="row">
                                                    <div class="col-md-6 PaddingTop10">
                                                        @Html.LabelFor(model => model.ShortNameE, new { @class = "control-label " }, Mandatory.Yes)
                                                    </div>
                                                    <div class="col-md-6">
                                                        @Html.EditorFor(model => model.ShortNameE, new { htmlAttributes = new { @class = "form-control minimal", @id = "ShortNameEId", tabindex = 2, @maxlength = 5 } })
                                                        @Html.ValidationMessageFor(model => model.ShortNameE, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br>

                                                <div class="row">
                                                    <div class="col-md-6 PaddingTop10">
                                                        @Html.LabelFor(model => model.ParentOfficeList, new { @class = "control-label " }, Mandatory.Yes)
                                                    </div>
                                                    <div class="col-md-6">
                                                        @Html.DropDownListFor(model => model.ParentOfficeId, Model.ParentOfficeList, new { @class = "form-control minimal", @id = "drpOfficeNameList", tabindex = 4 })
                                                        @Html.ValidationMessageFor(model => model.ParentOfficeId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br>

                                                @*Commented by shubham bhagat on 10-4-2019 requirement change*@
                                                @* <div class="row" id="talukaListDiv">
                                                        <div class="col-md-6">
                                                            @Html.LabelFor(model => model.TalukaList, new { @class = "PaddingTop10" })
                                                        </div>
                                                        <div class="col-md-6">
                                                            @Html.DropDownListFor(model => model.TalukaId, Model.TalukaList, new { @class = "form-control minimal", id = "drpTalukaList", tabindex = 6 })
                                                            @Html.ValidationMessageFor(model => model.TalukaId, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <br />*@

                                                @*<div class="row">
                                                        <div class="col-md-6">
                                                            @Html.LabelFor(model => model.AnyWhereRegEnabled, new { @class = "control-label" })
                                                        </div>
                                                        <div class="col-md-6">
                                                            @Html.EditorFor(model => model.AnyWhereRegEnabled, new { htmlAttributes = new { tabindex = 8 } })
                                                            @Html.ValidationMessageFor(model => model.AnyWhereRegEnabled, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div><br>*@
                                            </fieldset>
                                        </div>
                                    </div>
                                </fieldset>
                                <br>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        @*<div class="col-md-6 col-md-offset-5">*@
                        <div class="col-md-12" style="text-align:center;">
                            @if (Model.IsForUpdate)
                            {
                                <button type="button" class="btn btn-group-md btn-success" id="btnUpdate" title="Create">Update</button><i>&nbsp;</i>
                            }
                            else
                            {
                                <button type="reset" class="btn btn-group-md btn-warning " id="btnReset" title="Reset">Reset</button><i>&nbsp;</i>
                                <button type="button" class="btn btn-group-md btn-success" id="btnSave" title="Save">Save</button><i>&nbsp;</i>
                            }
                            <button type="reset" class="btn btn-group-md btn-danger " id="btnCancel" title="Cancel">Cancel</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
